---
name: Artifact Cleanup

on:
    workflow_dispatch:
        inputs:
            image_path:
                description: Full Artifact Registry image path (e.g. us-west1-docker.pkg.dev/PROJECT_ID/REPO/IMAGE)
                required: true
    push:
        branches:
            - '**FIT**'

jobs:
    cleanup-images:
        runs-on: ubuntu-latest
        steps:
            - name: Checkout code
              uses: actions/checkout@v4
              with:
                  fetch-depth: 3

            - name: Authenticate to Google Cloud
              uses: google-github-actions/auth@v2
              with:
                  credentials_json: ${{ secrets.GCP_SA_KEY }}

            - name: Set up Cloud SDK
              uses: google-github-actions/setup-gcloud@v2
              with:
                  project_id: ${{ secrets.PROJECT_ID }}
                  version: latest

            - name: Clean up untagged images
              run: |
                  # Set image paths
                  if [ -z "${{ github.event.inputs.image_path }}" ]; then
                    # Default paths for push events
                    APP_IMAGE_PATH="us-west1-docker.pkg.dev/${{ secrets.PROJECT_ID }}/fitnessllm-dp/fitnessllm-dp"
                    BASE_IMAGE_PATH="us-west1-docker.pkg.dev/${{ secrets.PROJECT_ID }}/fitnessllm-dp/base"
                  else
                    # Use provided image path for manual cleanup
                    APP_IMAGE_PATH="${{ github.event.inputs.image_path }}"
                    BASE_IMAGE_PATH=""
                  fi

                  # Clean up untagged app images using JSON output and jq
                  echo "DEBUG: Listing all app images as JSON..."
                  APP_IMAGES_JSON=$(gcloud artifacts docker images list "$APP_IMAGE_PATH" --include-tags --format="json")
                  echo "$APP_IMAGES_JSON"
                  echo "$APP_IMAGES_JSON" | jq -r '.[] | select((.tags == null or (.tags | length) == 0) and .digest != null) | .digest' | while read digest; do
                    if [[ -n "$digest" && "$digest" != "null" ]]; then
                      echo "Deleting untagged app digest: $digest"
                      gcloud artifacts docker images delete "$APP_IMAGE_PATH@$digest" --quiet || true
                    fi
                  done

                  # Only clean up base images if we're in push event mode
                  if [[ -n "$BASE_IMAGE_PATH" ]]; then
                    echo "DEBUG: Listing all base images as JSON..."
                    BASE_IMAGES_JSON=$(gcloud artifacts docker images list "$BASE_IMAGE_PATH" --include-tags --format="json")
                    echo "BASE_IMAGES_JSON"
                    echo "$BASE_IMAGES_JSON" | jq -r '.[] | select((.tags == null or (.tags | length) == 0) and .digest != null) | .digest' | while read digest; do
                      if [[ -n "$digest" && "$digest" != "null" ]]; then
                        echo "Deleting untagged base digest: $digest"
                        gcloud artifacts docker images delete "$BASE_IMAGE_PATH@$digest" --quiet || true
                      fi
                    done
                  fi
