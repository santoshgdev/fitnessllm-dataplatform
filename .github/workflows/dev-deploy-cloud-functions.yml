name: Deploy Cloud Functions

on:
  push:
    branches:
      - main
      - '*FIT-**'
    paths:
      - 'cloud_functions/**'
      - '.github/workflows/*-deploy-cloud-functions.yml'

env:
  PROJECT_ID: ${{ secrets.PROJECT_ID }}
  REGION: us-west1
  ENVIRONMENT: dev

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.9'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r cloud_functions/requirements.txt
        pip install pytest pytest-mock

    - name: token refresh tests
      run: |
        pytest cloud_functions/token_refresh/tests/

  tokenrefresh:
    needs: test
    runs-on: ubuntu-latest
    env:
      GCS_BUCKET: ${{ secrets.GCS_CF_BUCKET }}
    steps:
    - uses: actions/checkout@v4

    - name: Debug environment
      run: |
        echo "Checking if GCS_BUCKET is set:"
        if [ -n "$GCS_BUCKET" ]; then
          echo "GCS_BUCKET is set"
          echo "First few characters: ${GCS_BUCKET:0:4}..."
        else
          echo "GCS_BUCKET is empty"
        fi

    - name: Authenticate to Google Cloud
      uses: google-github-actions/auth@v2
      with:
        credentials_json: ${{ secrets.GCP_SA_KEY }}

    - name: Set up Cloud SDK
      uses: google-github-actions/setup-gcloud@v2
      with:
        project_id: ${{ env.PROJECT_ID }}
        version: 'latest'

    - name: Create Pub/Sub topic
      run: |
        gcloud pubsub topics create token-refresh || true

    - name: Create function source zip
      run: |
        cd cloud_functions/token_refresh
        zip -r ../tokenrefresh.zip .

    - name: Upload function zip to GCS
      run: |
        gsutil cp tokenrefresh.zip "gs://${GCS_BUCKET}/${{ env.ENVIRONMENT }}/tokenrefresh/tokenrefresh.zip"
