name: Deploy Cloud Functions

on:
  push:
    branches:
      - main
      - '*FIT-**'
    paths:
      - 'cloud_functions/**'
      - '.github/workflows/*-deploy-cloud-functions.yml'

env:
  PROJECT_ID: ${{ secrets.PROJECT_ID }}
  REGION: us-west1
  ENVIRONMENT: dev

jobs:
#  test:
#    runs-on: ubuntu-latest
#    steps:
#    - uses: actions/checkout@v4
#
#    - name: Set up Python
#      uses: actions/setup-python@v5
#      with:
#        python-version: '3.9'
#
#    - name: Install dependencies
#      run: |
#        python -m pip install --upgrade pip
#        pip install -r cloud_functions/requirements.txt
#        pip install pytest pytest-mock
#
#    - name: token refresh tests
#      run: |
#        pytest cloud_functions/token_refresh/tests/

  detect_changes:
    runs-on: ubuntu-latest
    outputs:
      dev-token_refresh: ${{ steps.filter.outputs.dev-token_refresh }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 2  # Required for git diff

      - uses: dorny/paths-filter@v3
        id: filter
        with:
          filters: |
            dev-token_refresh: 'cloud_functions/token_refresh/**'

  deploy:
    needs: detect_changes
    runs-on: ubuntu-latest
    environment: dev
    strategy:
      matrix:
        function: ['dev-token_refresh']
    steps:
    - uses: actions/checkout@v4

    - name: Authenticate to Google Cloud
      uses: google-github-actions/auth@v2
      with:
        credentials_json: ${{ secrets.GCP_SA_KEY }}

    - name: Set up gcloud CLI
      uses: google-github-actions/setup-gcloud@v2

    - name: Deploy Function
      if: needs.detect_changes.outputs[matrix.function] == 'true'
      run: |
        gcloud functions deploy ${{ matrix.function }} \
          --gen2 \
          --region=${{ env.REGION }} \
          --runtime=python310 \
          --source=cloud_functions/${{ matrix.function }} \
          --trigger-http \
          --entry-point=refresh_token \
          --no-allow-unauthenticated \
          --max-instances=10 \
          --min-instances=0 \
          --memory=256MB \
          --set-env-vars=PROJECT_ID=${{ env.PROJECT_ID }},ENVIRONMENT=${{ env.ENVIRONMENT }}