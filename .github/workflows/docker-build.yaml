name: Build, Test and Push to GCR

on:
  push:
    branches:
      - main
      - 'FIT-**'

env:
  PYTHONPATH: ${{ github.workspace }}
  PROJECT_NAME: fitnessllm-dp

jobs:
  test-and-build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.12.2'


    - name: Install Poetry
      uses: snok/install-poetry@v1
      with:
        version: 2.0.1
        virtualenvs-create: true
        virtualenvs-in-project: true

    - name: Cache Poetry dependencies
      if: success()
      uses: actions/cache@v4
      with:
        path: |
          .venv
          ~/.cache/pypoetry
        key: poetry-${{ runner.os }}-${{ hashFiles('pyproject.toml', 'poetry.lock') }}

    - name: Install dependencies
      if: success()
      run: poetry install --no-interaction

    - name: Run pytest
      if: success()
      run: poetry run pytest tests/


    - name: Cache pre-commit environments
      if: success()
      uses: actions/cache@v4
      with:
        path: ~/.cache/pre-commit
        key: precommit-${{ runner.os }}-${{ hashFiles('.pre-commit-config.yaml') }}

    - name: Install dependencies
      if: success()
      run: |
        python -m pip install --upgrade pip
        pip install pre-commit

    - name: Run pre-commit
      if: success()
      run: |
        pre-commit install
        pre-commit run --all-files


    - name: Set up Cloud SDK
      if: success()
      uses: google-github-actions/setup-gcloud@v2
      with:
        project_id: ${{ secrets.PROJECT_ID }}
        service_account_key: ${{ secrets.GCP_SA_KEY }}

    - name: Configure Docker for GCR
      if: success()
      run: |
        gcloud auth configure-docker

    - name: Build Docker image
      if: success()
      run: |
        docker build -t gcr.io/${{ secrets.PROJECT_ID }}/${{ env.PROJECT_NAME }}:${{ github.sha }} .
        docker tag gcr.io/${{ secrets.PROJECT_ID }}/${{ env.PROJECT_NAME }}:${{ github.sha }} gcr.io/${{ secrets.PROJECT_ID }}/${{ env.PROJECT_NAME }}:main

    - name: Push Docker image to GCR
      if: success()
      run: |
        docker push gcr.io/${{ secrets.PROJECT_ID }}/${{ env.PROJECT_NAME }}:main
