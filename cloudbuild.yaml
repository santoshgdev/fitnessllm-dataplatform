steps:
  # Deploy the token refresh Cloud Function
  - name: 'gcr.io/cloud-builders/gcloud'
    args:
      - 'functions'
      - 'deploy'
      - 'refresh_token'
      - '--runtime=python39'
      - '--trigger-topic=token-refresh'
      - '--region=us-central1'
      - '--source=./cloud_functions/token_refresh'
      - '--entry-point=refresh_token'
      - '--allow-unauthenticated'
      - '--memory=128MB'
      - '--timeout=60s'
      - '--min-instances=0'
      - '--max-instances=10'
      - '--set-env-vars=PROJECT_ID=${PROJECT_ID}'
      - '--vpc-connector=projects/${PROJECT_ID}/locations/us-central1/connectors/your-vpc-connector'
      - '--service-account=your-service-account@${PROJECT_ID}.iam.gserviceaccount.com'

  # Build the task handler container
  - name: 'gcr.io/cloud-builders/docker'
    args:
      - 'build'
      - '-t'
      - 'gcr.io/${PROJECT_ID}/task-handler:${SHORT_SHA}'
      - '-t'
      - 'gcr.io/${PROJECT_ID}/task-handler:latest'
      - '.'

  # Push the container to Container Registry
  - name: 'gcr.io/cloud-builders/docker'
    args:
      - 'push'
      - 'gcr.io/${PROJECT_ID}/task-handler:${SHORT_SHA}'
      - 'gcr.io/${PROJECT_ID}/task-handler:latest'

  # Deploy to Cloud Run
  - name: 'gcr.io/cloud-builders/gcloud'
    args:
      - 'run'
      - 'deploy'
      - 'task-handler'
      - '--image'
      - 'gcr.io/${PROJECT_ID}/task-handler:${SHORT_SHA}'
      - '--region'
      - 'us-central1'
      - '--platform'
      - 'managed'
      - '--allow-unauthenticated'
      - '--vpc-connector'
      - 'projects/${PROJECT_ID}/locations/us-central1/connectors/your-vpc-connector'
      - '--service-account'
      - 'your-service-account@${PROJECT_ID}.iam.gserviceaccount.com'

images:
  - 'gcr.io/${PROJECT_ID}/task-handler:${SHORT_SHA}'
  - 'gcr.io/${PROJECT_ID}/task-handler:latest' 